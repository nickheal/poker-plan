{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Button.svelte",
    "../../Input.svelte",
    "../../ScoreChoice.svelte",
    "../../Title.svelte",
    "../../Home.svelte",
    "../../Session.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Router, Route } from 'svelte-routing';\n  import Home from './routes/Home.svelte';\n\timport Session from './routes/Session.svelte';\n\timport userStore from './stores/user';\n\n\tlet userId;\n\n\tuserStore.subscribe(uid => userId = uid);\n\n  export let url = '';\n</script>\n\n{#if !userId}\n\t<p>Loading...</p>\n{:else}\n\t<Router url={url}>\n\t\t<Route path=\"/sessions/:id\" let:params>\n\t\t\t<Session sessionId={params.id} userId={userId} />\n\t\t</Route>\n\t\t<Route path=\"/\">\n\t\t\t<Home userId={userId} />\n\t\t</Route>\n\t</Router>\n{/if}\n\n<style>\n\t:global(body, *) {\n\t\tfont-family: 'Balsamiq Sans', Helvetica, Arial, sans-serif;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbox-sizing: border-box;\n\t}\n</style>",
    "<script>\n  export let onClick;\n  export let type;\n</script>\n\n<button\n  on:click={onClick}\n  {type}\n>\n  <slot />\n</button>\n\n<style>\n  button {\n    background: blue;\n    border: 0;\n    border-radius: 8px;\n    color: white;\n    cursor: pointer;\n    font-size: 30px;\n    margin: 24px 12px;\n    padding: 4px 12px;\n  }\n\n  button:hover {\n    background-color: darkblue;\n  }\n</style>",
    "<script>\n  export let disabled;\n  export let id;\n  export let label;\n  export let onChange = () => {};\n  export let onInput = () => {};\n  export let value;\n</script>\n\n<label for={id}>{label}</label>\n<input\n  {disabled}\n  {id}\n  name={id}\n  on:change={e => onChange(e.currentTarget.value)}\n  on:input={e => onInput(e.currentTarget.value)}\n  value={value || ''}\n/>\n\n<style>\n  input {\n    border: solid 2px #333;\n    border-radius: 8px;\n    font-size: 30px;\n    padding: 2px 12px;\n  }\n\n  label {\n    font-size: 30px;\n  }\n</style>",
    "<script>\n  export let onChange;\n  export let value;\n\n  const options = [1, 2, 3, 5, 8, 13, 20].map((score) => ({\n    id: score,\n    label: `${score}`,\n    onClick: () => onChange(score)\n  }));\n</script>\n\n<ol class=\"list\">\n  {#each options as option}\n    <li>\n      <button\n        class=\"option\"\n        class:chosen={option.id === value}\n        on:click={option.onClick}\n      >\n        {option.label}\n      </button>\n    </li>\n  {/each}\n</ol>\n\n<style>\n  .list {\n    display: flex;\n    justify-content: center;\n    list-style-type: none;\n    margin: 24px auto;\n    max-width: 300px;\n  }\n\n  .option {\n    background: none;\n    border: 0;\n    border-bottom: solid 2px #eee;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 30px;\n    margin: 0 4px;\n    min-width: 44px;\n    padding: 4px 12px;\n  }\n\n  .option:hover {\n    border-color: darkblue;\n  }\n\n  .chosen {\n    border-color: blue;\n  }\n</style>",
    "<h1><slot /></h1>\n\n<style>\n  h1 {\n    font-size: 48px;\n    margin: 0 auto;\n    padding: 24px 12px;\n    text-align: center;\n  }\n</style>",
    "<script>\n\timport { navigate } from 'svelte-routing';\n\timport Button from '../components/Button.svelte';\n\timport Input from '../components/Input.svelte';\n\timport Title from '../components/Title.svelte';\n\timport { score, sessions, sessionUser } from '../utils/database';\n\n\texport let userId;\n\n\tlet noOfSessions;\n\tlet joinSessionId;\n\n\tsessions.on('value', (snapshot) => {\n\t\tconst val = snapshot.val();\n\t\tif (!val) {\n\t\t\tnoOfSessions = 0;\n\t\t\treturn;\n\t\t}\n\t\tnoOfSessions = Object.keys(val).length;\n\t});\n\n\tasync function createSession() {\n\t\tconst newSession = await sessions.push();\n\t\tnewSession.set({\n\t\t\trevealed: false\n\t\t});\n\t\tsessionUser(newSession.key).set({\n\t\t\t[userId]: true\n\t\t});\n\t\tnavigate(`/sessions/${newSession.key}`);\n\t}\n\n\tfunction onJoinSession(e) {\n\t\te.preventDefault();\n\t\tnavigate(`/sessions/${joinSessionId}`);\n\t}\n</script>\n\n<main>\n\t<Title>Poker-plan</Title>\n\n\t<section>\n\t\t<h2>Start a new session</h2>\n\t\t<Button onClick={createSession}>Create a session</Button>\n\t</section>\n\t\n\t<section>\n\t\t<h2>Join an existing session</h2>\n\t\t<form on:submit={onJoinSession}>\n\t\t\t<Input\n\t\t\t\tid=\"session-id\"\n\t\t\t\tlabel=\"Session ID\"\n\t\t\t\tonChange={newValue => joinSessionId = newValue}\n\t\t\t\tvalue={joinSessionId}\n\t\t\t/>\n\t\t\t<Button>Join session</Button>\n\t\t</form>\n\t</section>\n\n\t<p>{noOfSessions} sessions currently in progress.</p>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\tsection {\n\t\tborder-bottom: solid 1px #eee;\n\t\tmargin: 24px auto;\n\t\tpadding: 24px;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n\timport Button from '../components/Button.svelte';\n\timport NameChoice from '../components/NameChoice.svelte';\n  import ScoreChoice from '../components/ScoreChoice.svelte';\n\timport Title from '../components/Title.svelte';\n  import { score, session, sessionUser, user } from '../utils/database';\n  \n  export let sessionId;\n  export let userId;\n\n  let userRefs = [];\n  let scoreRef = score(sessionId);\n  let sessionRef = session(sessionId);\n  let sessionUserRef = sessionUser(sessionId);\n\n\tlet scoreList;\n  let sessionInfo;\n  let userList = [];\n\n  function onChoose(newChoice) {\n    scoreRef.update({ [userId]: newChoice })\n  }\n\n  function onClickReveal() {\n    sessionRef.update({ revealed: !sessionInfo.revealed });\n  }\n\n  function onClickClear() {\n    scoreRef.set({});\n  }\n\n  sessionUserRef.update({\n    [userId]: true\n  });\n\n\tscoreRef.on('value', (snapshot) => {\n\t\tscoreList = snapshot.val();\n  });\n  \n  sessionRef.on('value', (snapshot) => {\n\t\tsessionInfo = snapshot.val();\n  });\n\n  sessionUserRef.on('value', (snapshot) => {\n    userRefs.map((userRef) => userRef.off());\n    userRefs = [];\n\n    const sessionUserList = snapshot.val();\n\n    Object.keys(sessionUserList).map((userId) => {\n      const userRef = user(userId);\n      userRefs.push(userRef);\n  \n      userRef.on('value', (snapshot) => {\n        const user = snapshot.val();\n        const existingUser = userList.find((u) => u.id === userId);\n        if (existingUser) {\n          userList.splice(userList.indexOf(existingUser));\n        }\n        userList = [...userList, {\n          id: userId,\n          name: user.name\n        }];\n      });\n    });\n  });\n</script>\n\n<main>\n  {#if sessionInfo && userList.length}\n    <Title>Poker-plan</Title>\n\n    <NameChoice />\n\n    <section class=\"actions\">\n      <Button onClick={onClickClear}>Clear</Button>\n      <Button onClick={onClickReveal}>{sessionInfo.revealed ? 'Hide' : 'Show'}</Button>\n    </section>\n\n    <ScoreChoice onChange={onChoose} value={scoreList && scoreList[userId]} />\n\n    <dl>\n      {#each userList as user}\n        <div class=\"user\">\n          <dt class=\"user-name\">{user.name || '???'}</dt>\n          <dd class=\"user-score-container\">\n            <p class=\"user-score\" class:obscured={!sessionInfo.revealed}>\n              {sessionInfo.revealed && scoreList ? scoreList[user.id] || '?' : '?'}\n            </p>\n          </dd>\n        </div>\n      {/each}\n    </dl>\n  {/if}\n</main>\n\n<style>\n  .actions {\n    display: flex;\n    justify-content: center;\n    margin: 0 auto;\n  }\n\n  .user {\n    border-bottom: solid 1px #eee;\n    display: flex;\n    font-size: 24px;\n    margin-bottom: 8px;\n    padding-bottom: 8px;\n  }\n\n  .user-name, .user-score-container {\n    width: 50%;\n  }\n  \n  .user-name {\n    margin: 0;\n    padding-right: 8px;\n    text-align: right;\n  }\n\n  .user-score-container {\n    margin: 0;\n    padding-left: 8px;\n    text-align: left;\n  }\n\n  .user-score {\n    display: inline-block;\n    padding: 0 4px;\n  }\n\n  .obscured {\n    background: #eee;\n    color: #eee;\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}